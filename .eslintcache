[{"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\index.tsx":"1","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\reportWebVitals.ts":"2","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\LandingPage.tsx":"3","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\LandingPage.styles.tsx":"4","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\styles\\theme.tsx":"5","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\helpers\\useWindowSize.tsx":"6","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\helpers\\fatchData.ts":"7","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\helpers\\localEvents.ts":"8","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\EventsList\\EventList.tsx":"9","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\SelectedEvent\\SelectedEvent.tsx":"10","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\SearchComponent\\SearchComponent.tsx":"11","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\ArtistCard\\ArtistCard.tsx":"12","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\FavoritesArea\\FavoritesArea.tsx":"13","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\EventsList\\EventList.styles.tsx":"14","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\SelectedEvent\\SelectedEvent.styles.tsx":"15","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\ArtistCard\\ArtistCard.styles.tsx":"16","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\FavoritesArea\\FavoritesArea.styles.tsx":"17"},{"size":490,"mtime":1608647391953,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1608535073152,"results":"20","hashOfConfig":"19"},{"size":12864,"mtime":1608661862145,"results":"21","hashOfConfig":"19"},{"size":2549,"mtime":1608661821894,"results":"22","hashOfConfig":"19"},{"size":1138,"mtime":1608646757067,"results":"23","hashOfConfig":"19"},{"size":662,"mtime":1608582046097,"results":"24","hashOfConfig":"19"},{"size":709,"mtime":1608627783440,"results":"25","hashOfConfig":"19"},{"size":994,"mtime":1608628726508,"results":"26","hashOfConfig":"19"},{"size":4926,"mtime":1608657374566,"results":"27","hashOfConfig":"19"},{"size":7063,"mtime":1608655809098,"results":"28","hashOfConfig":"19"},{"size":3462,"mtime":1608655652710,"results":"29","hashOfConfig":"19"},{"size":3032,"mtime":1608659399122,"results":"30","hashOfConfig":"19"},{"size":6922,"mtime":1608656785994,"results":"31","hashOfConfig":"19"},{"size":1444,"mtime":1608657735354,"results":"32","hashOfConfig":"19"},{"size":1963,"mtime":1608647317717,"results":"33","hashOfConfig":"19"},{"size":1084,"mtime":1608659083586,"results":"34","hashOfConfig":"19"},{"size":2391,"mtime":1608656648136,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"zsimsh",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\index.tsx",[],["72","73"],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\reportWebVitals.ts",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\LandingPage.tsx",["74"],"import React, { Fragment, useState } from 'react';\r\nimport { WithStyles, withStyles } from '@material-ui/core/styles';\r\nimport { styles } from './LandingPage.styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport SearchComponent from './SearchComponent/SearchComponent';\r\nimport ArtistCard from './ArtistCard/ArtistCard';\r\nimport EventList from './EventsList/EventList';\r\nimport SelectedEvent from './SelectedEvent/SelectedEvent';\r\nimport FavoritesArea from './FavoritesArea/FavoritesArea';\r\nimport { useWindowSize } from '../helpers/useWindowSize';\r\nimport { fetchBand, fetchEvents } from '../helpers/fatchData';\r\nimport { getArtistFavEvents, getLocalFavEvents, setLocalFavEvents } from '../helpers/localEvents';\r\n\r\ninterface ILandingPageProps {\r\n\r\n}\r\n\r\ninterface ILandingPageActions {\r\n    artist: IArtist | undefined;\r\n    setArtist: (artist: IArtist | undefined) => void;\r\n    events: IEvent[];\r\n    setEvents: (artist: IEvent[]) => void;\r\n    selectedEvent: IEvent | undefined;\r\n    setSelectedEvent: (selectedEvent: IEvent | undefined) => void;\r\n    handleSearch: (searchText: string) => void;\r\n    handleEventClick: (eventIndex: number | undefined) => void;\r\n    handleSetFavorite: (artistId: string, eventId: string, isFavorite: boolean) => void;\r\n}\r\n\r\nexport interface IArtist {\r\n    id: string;\r\n    name: string;\r\n    fbUrl: string;\r\n    url: string;\r\n    imgUrl: string\r\n}\r\n\r\nexport interface IEvent {\r\n    id: string;\r\n    artistName: string;\r\n    description: string;\r\n    eventDate: string;\r\n    onSaleDate: string;\r\n    lineup: string[];\r\n    offers: IOffer[];\r\n    url: string;\r\n    venue: IVenue;\r\n    isSelected: boolean;\r\n    isFavorite: boolean;\r\n}\r\n\r\nexport interface IVenue {\r\n    city: string;\r\n    country: string;\r\n    location: string;\r\n    name: string;\r\n    region: string;\r\n    latitude: string;\r\n    longitude: string;\r\n}\r\n\r\nexport interface IOffer {\r\n    status: string;\r\n    type: string;\r\n    url: string;\r\n}\r\n\r\nexport interface ILocalFavEvents {\r\n    artistId: string,\r\n    artistName: string,\r\n    favEvents: IEvent[]\r\n}\r\n\r\ntype ILandingPageCombinedProps = ILandingPageProps & WithStyles<typeof styles>;\r\n\r\nconst bandNameUpdate = (bandName: string): string => {\r\n    // replacing special characters as per API description\r\n    let bandArr = bandName.split('');\r\n    const slashIndex = bandArr.findIndex(char => char === '/');\r\n    slashIndex !== -1 && (bandArr[slashIndex] = '%252F');\r\n    const qmIndex = bandArr.findIndex(char => char === '?');\r\n    qmIndex !== -1 && (bandArr[qmIndex] = '%253F');\r\n    const starIndex = bandArr.findIndex(char => char === '*');\r\n    starIndex !== -1 && (bandArr[starIndex] = '%252A');\r\n    const quoteIndex = bandArr.findIndex(char => char === '\"');\r\n    quoteIndex !== -1 && (bandArr[quoteIndex] = '%27C');\r\n    const bandNameUpdated = bandArr.join('');\r\n    return bandNameUpdated;\r\n}\r\n\r\nconst searchContainer = (landingPageActions: ILandingPageActions, props: ILandingPageCombinedProps) => {\r\n    return (\r\n        <Grid item className={props.classes.searchContainer}>\r\n            {landingPageActions.artist && <SearchComponent\r\n                handleSearch={landingPageActions.handleSearch}\r\n            />}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst artistAndEvents = (isMobile: boolean, height: number, width: number, landingPageActions: ILandingPageActions, props: ILandingPageCombinedProps) => {\r\n    return (\r\n        <Grid\r\n            className={isMobile ? props.classes.artistContainerMobile : undefined}\r\n            style={{\r\n                height: isMobile ? height - 150 : undefined,\r\n                width: isMobile ? '95%' : '100%'\r\n            }}\r\n        >\r\n            <ArtistCard\r\n                width={width}\r\n                isMobile={isMobile}\r\n                artist={landingPageActions.artist!}\r\n            />\r\n            {landingPageActions.events.length\r\n                ? <Grid item\r\n                    className={isMobile\r\n                        ? undefined\r\n                        : props.classes.eventsContainer}\r\n                    style={{\r\n                        height: isMobile ? height - 150 : height - 500,\r\n                        width: isMobile ? '100%' : '48%'\r\n                    }}\r\n                >\r\n                    <EventList\r\n                        artistId={landingPageActions.artist!.id}\r\n                        events={landingPageActions.events}\r\n                        height={height}\r\n                        isMobile={isMobile}\r\n                        selectedEvent={landingPageActions.selectedEvent}\r\n                        handleEventClick={landingPageActions.handleEventClick}\r\n                        handleSetFavorite={landingPageActions.handleSetFavorite}\r\n                    />\r\n                </Grid>\r\n                : <Grid className={props.classes.notFound}>\r\n                    <Typography className={props.classes.subHeaderText}>\r\n                        No upcoming events. Stay tuned...\r\n                        </Typography>\r\n                </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mainContainerDesktop = (landingPageActions: ILandingPageActions, height: number, width: number, props: ILandingPageCombinedProps) => {\r\n    return (\r\n        <Grid container className={props.classes.mainContainer}>\r\n            <Grid container className={props.classes.leftColumn}>\r\n                {searchContainer(landingPageActions, props)}\r\n                {landingPageActions.artist\r\n                    ? artistAndEvents(false, height, width, landingPageActions, props)\r\n                    : undefined}\r\n            </Grid>\r\n            <Grid className={props.classes.rightColumn}>\r\n                {landingPageActions.selectedEvent && landingPageActions.artist\r\n                    ? <SelectedEvent\r\n                        height={height}\r\n                        isMobile={false}\r\n                        event={landingPageActions.selectedEvent}\r\n                        artistName={landingPageActions.artist.name}\r\n                    />\r\n                    : undefined}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mainContainerMobile = (landingPageActions: ILandingPageActions, height: number, width: number, props: ILandingPageCombinedProps) => {\r\n    return (\r\n        <Grid className={props.classes.mainContainerMobile}>\r\n            {searchContainer(landingPageActions, props)}\r\n            {landingPageActions.artist\r\n                ? artistAndEvents(true, height, width, landingPageActions, props)\r\n                : undefined}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst LandingPage: React.FunctionComponent<ILandingPageCombinedProps> = (props: ILandingPageCombinedProps) => {\r\n    const [artist, setArtist] = useState<IArtist | undefined>(undefined);\r\n    const [events, setEvents] = useState<IEvent[]>([]);\r\n    const [noArtistFound, setNoArtistFound] = useState<boolean>(false);\r\n    const [selectedEvent, setSelectedEvent] = useState<IEvent | undefined>(undefined);\r\n    const { width, height } = useWindowSize();\r\n    const matchesMobile = useMediaQuery('(max-width:700px)');\r\n\r\n    const handleSearch = async (searchText: string) => {\r\n        setSelectedEvent(undefined)\r\n        const bandNameUpdated = bandNameUpdate(searchText);\r\n        const dataP = fetchBand(bandNameUpdated);\r\n        const artistData = await dataP.then(res => res);\r\n        if (artistData !== '') {\r\n            setNoArtistFound(false);\r\n            const eventDataP = fetchEvents(bandNameUpdated);\r\n            const artistEventData = await eventDataP.then(res => res);\r\n            const artistFavEvents = getArtistFavEvents(artistData.id);\r\n\r\n            const artistObj: IArtist = {\r\n                id: artistData.id,\r\n                name: artistData.name,\r\n                fbUrl: artistData.facebook_page_url,\r\n                url: artistData.url,\r\n                imgUrl: artistData.image_url\r\n            };\r\n\r\n            const eventsArr: IEvent[] = [];\r\n            artistEventData.forEach((event: any) => {\r\n                let isFavorite = false;\r\n                artistFavEvents.length && (isFavorite = artistFavEvents.some(favEvent => favEvent.id === event.id))\r\n                eventsArr.push({\r\n                    id: event.id,\r\n                    artistName: artistData.name,\r\n                    description: event.description,\r\n                    eventDate: event.datetime,\r\n                    onSaleDate: event.on_sale_datetime,\r\n                    lineup: event.lineup,\r\n                    offers: event.offers,\r\n                    url: event.url,\r\n                    venue: event.venue,\r\n                    isSelected: false,\r\n                    isFavorite: isFavorite\r\n                });\r\n            })\r\n\r\n            setArtist(artistObj);\r\n            setEvents(eventsArr);\r\n        } else {\r\n            setNoArtistFound(true);\r\n            setArtist(undefined);\r\n            setEvents([]);\r\n        }\r\n    }\r\n\r\n    const handleEventClick = (eventIndex: number | undefined) => {\r\n        let currEvents = [...events];\r\n        currEvents.map((event, i) =>\r\n            event.isSelected = i === eventIndex ? !event.isSelected : false\r\n        );\r\n        if (eventIndex !== undefined) {\r\n            const sEvent = currEvents[eventIndex];\r\n            setSelectedEvent(sEvent.isSelected ? sEvent : undefined);\r\n        } else {\r\n            setSelectedEvent(undefined);\r\n        }\r\n        setEvents(currEvents);\r\n    }\r\n\r\n    const handleSetFavorite = (artistId: string, eventId: string, isFavorite: boolean) => {\r\n        let favEvent: IEvent | undefined = undefined;\r\n        if (artistId === artist?.id) {\r\n            let currEvents = [...events];\r\n            const eventIndex = currEvents.findIndex(event => event.id === eventId);\r\n            favEvent = currEvents[eventIndex];\r\n            favEvent.isFavorite = !isFavorite;\r\n            setEvents(currEvents);\r\n        }\r\n        let currFavEvents = getLocalFavEvents();\r\n        const favArtistIndex = currFavEvents.findIndex(artistFav => artistFav.artistId === artist!.id);\r\n        if (isFavorite) {\r\n            if (currFavEvents[favArtistIndex].favEvents.length === 1) {\r\n                currFavEvents.splice(favArtistIndex, 1);\r\n            } else {\r\n                const favEventIndex = currFavEvents[favArtistIndex].favEvents.findIndex(event => event.id === eventId);\r\n                currFavEvents[favArtistIndex].favEvents.splice(favEventIndex, 1);\r\n\r\n            }\r\n        } else if (favEvent) {\r\n            if (favArtistIndex === -1) {\r\n                currFavEvents.push({\r\n                    artistId: artist!.id,\r\n                    artistName: artist!.name,\r\n                    favEvents: [favEvent]\r\n                });\r\n            } else {\r\n                currFavEvents[favArtistIndex].favEvents.push(favEvent);\r\n            }\r\n        }\r\n        setLocalFavEvents(currFavEvents);\r\n    }\r\n\r\n    const landingPageActions: ILandingPageActions = {\r\n        artist: artist,\r\n        setArtist: setArtist,\r\n        events: events,\r\n        setEvents: setEvents,\r\n        selectedEvent: selectedEvent,\r\n        setSelectedEvent: setSelectedEvent,\r\n        handleSearch: handleSearch,\r\n        handleEventClick: handleEventClick,\r\n        handleSetFavorite: handleSetFavorite\r\n    }\r\n\r\n    return (\r\n        <Grid container className={props.classes.root}>\r\n            <Grid className={props.classes.header}>\r\n                <Grid className={props.classes.headerTop} />\r\n                <Typography\r\n                    className={props.classes.headerText}\r\n                >\r\n                    Who's In Town\r\n                </Typography>\r\n            </Grid>\r\n            {!artist\r\n                ? <Grid className={props.classes.onlySearch}>\r\n                    <SearchComponent\r\n                        handleSearch={landingPageActions.handleSearch}\r\n                    />\r\n                    {noArtistFound &&\r\n                        <Grid className={props.classes.notFound}>\r\n                            <Typography className={props.classes.subHeaderText}>\r\n                                No artist by that name. Please try again...\r\n                        </Typography>\r\n                        </Grid>}\r\n                </Grid>\r\n                : matchesMobile\r\n                    ? mainContainerMobile(landingPageActions, height, width, props)\r\n                    : mainContainerDesktop(landingPageActions, height, width, props)\r\n            }\r\n            <Grid className={props.classes.rootRight}>\r\n                <FavoritesArea\r\n                    height={height}\r\n                    handleSetFavorite={handleSetFavorite}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(LandingPage);","C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\LandingPage.styles.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\styles\\theme.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\helpers\\useWindowSize.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\helpers\\fatchData.ts",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\helpers\\localEvents.ts",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\EventsList\\EventList.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\SelectedEvent\\SelectedEvent.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\SearchComponent\\SearchComponent.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\ArtistCard\\ArtistCard.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\FavoritesArea\\FavoritesArea.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\EventsList\\EventList.styles.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\SelectedEvent\\SelectedEvent.styles.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\ArtistCard\\ArtistCard.styles.tsx",[],"C:\\Users\\vladi\\Desktop\\Coding\\whos-in-town\\src\\features\\FavoritesArea\\FavoritesArea.styles.tsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]